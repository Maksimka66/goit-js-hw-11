{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["// Імпорт izitoast\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Імпорт simplelightbox'\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n//  Скрипти\nconst formToFill = document.querySelector('.form');\nconst inputToFill = document.querySelector('input[name=\"delay\"]');\nconst galleryOfPictures = document.querySelector('.gallery');\n\n// Слухач форми\nformToFill.addEventListener('submit', event => {\n  event.preventDefault();\n  const searchQuery = inputToFill.value.trim();\n  if (searchQuery === '') {\n    iziToast.warning({\n      title: 'All fields must be filled!',\n      position: 'topRight',\n    });\n  }\n  fetchImages(searchQuery)\n    .then(arr => {\n      const markup = arr\n        .map(\n          ({\n            webformatURL,\n            largeImageURL,\n            tags,\n            likes,\n            views,\n            comments,\n            downloads,\n          }) =>\n            `<li class=\"gallery-item\">\n      <a  href=\"${largeImageURL}\">\n        <img \n          class=\"gallery-image\"\n          src=\"${webformatURL}\"\n          alt=\"${tags}\"\n        />\n        <p>Likes: ${likes}</p>\n        <p>Views: ${views}</p>\n        <p>Comments: ${comments}</p>\n        <p>Downloads: ${downloads}</p>\n      </a>\n    </li>`\n        )\n        .join('');\n      galleryOfPictures.insertAdjacentHTML('beforeend', markup);\n    })\n    .catch(error =>\n      iziToast.error({\n        title:\n          'Sorry, there are no images matching your search query. Please try again!',\n        position: 'topRight',\n      })\n    );\n});\n\n// Набір параметрів\nfunction fetchImages(value) {\n  const params = new URLSearchParams({\n    key: '41859392-e5bc4a8d4ece805d6453ecbd7',\n    q: value,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  });\n\n  // Запит на сервер\n  return fetch(`https://pixabay.com/api/?${params}`).then(response => {\n    if (!response.ok) {\n      throw new Error('Error fetching images');\n    }\n    return response.json();\n  });\n}\n"],"names":["formToFill","inputToFill","galleryOfPictures","event","searchQuery","iziToast","fetchImages","arr","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","error","value","params","response"],"mappings":"svBASA,MAAMA,EAAa,SAAS,cAAc,OAAO,EAC3CC,EAAc,SAAS,cAAc,qBAAqB,EAC1DC,EAAoB,SAAS,cAAc,UAAU,EAG3DF,EAAW,iBAAiB,SAAUG,GAAS,CAC7CA,EAAM,eAAc,EACpB,MAAMC,EAAcH,EAAY,MAAM,KAAI,EACtCG,IAAgB,IAClBC,EAAS,QAAQ,CACf,MAAO,6BACP,SAAU,UAChB,CAAK,EAEHC,EAAYF,CAAW,EACpB,KAAKG,GAAO,CACX,MAAMC,EAASD,EACZ,IACC,CAAC,CACC,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,IACC;AAAA,kBACML;AAAA;AAAA;AAAA,iBAGDD;AAAA,iBACAE;AAAA;AAAA,oBAEGC;AAAA,oBACAC;AAAA,uBACGC;AAAA,wBACCC;AAAA;AAAA,UAGf,EACA,KAAK,EAAE,EACVb,EAAkB,mBAAmB,YAAaM,CAAM,CAC9D,CAAK,EACA,MAAMQ,GACLX,EAAS,MAAM,CACb,MACE,2EACF,SAAU,UAClB,CAAO,CACP,CACA,CAAC,EAGD,SAASC,EAAYW,EAAO,CAC1B,MAAMC,EAAS,IAAI,gBAAgB,CACjC,IAAK,qCACL,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,CAAG,EAGD,OAAO,MAAM,4BAA4BC,GAAQ,EAAE,KAAKC,GAAY,CAClE,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,uBAAuB,EAEzC,OAAOA,EAAS,MACpB,CAAG,CACH"}